.macro end
    li      $v0, 10
    syscall
.end_macro

.macro getInt(%des)
    li      $v0, 5
    syscall
    move    %des, $v0
.end_macro

.macro getChar(%des)
	li      $v0, 12
	syscall
	move    %des, $v0
.end_macro

.macro printInt(%src)
    move    $a0, %src
    li      $v0, 1
    syscall
.end_macro

.macro printChar(%src)
	la $a0 %src
	li $v0 4
	syscall 
.end_macro

.macro push(%src)
    addi    $sp, $sp, -4
    sw      %src, 0($sp)
.end_macro

.macro pop(%des)
    lw      %des, 0($sp)
    addi    $sp, $sp, 4
.end_macro

.macro Index(%n, %m, %s0, %ans)
	mult %n %s0
	mflo %ans
	add %ans %ans %m
	sll %ans %ans 2
.end_macro

.data
	symbol: .space 28
	array: .space 28
	space: .asciiz " "
	enter: .asciiz "\n"
	
.text
main:
	getInt($s0) #s0 = n
	move $a0 $0
	jal FullArray
end

FullArray:
	push($ra)
	push($t0)
	push($t1)
	push($t2)
	push($t3)
	push($t4)
	
	move $t0 $a0 #t0 = index
	slt $t1 $t0 $s0
	bne $t1 $0 if_end
	if:
		li $t2 0 #t2 = i
		for_start:
			slt $t1 $t2 $s0
			beq $t1 $0 for_end
			
			sll $t1 $t2 2
			lw $t1 array($t1)
			printInt($t1)
			printChar(space)
			
			addi $t2 $t2 1
			j for_start
		for_end:
		printChar(enter)
		j if_end
		
	if_end:
	
		li $t2 0 #t2 = i
		for_start2:
			slt $t1 $t2 $s0
			beq $t1 $0 for_end2 
			
			sll $t1 $t2 2
			lw $t1 symbol($t1)
			bne $t1 $0 if_end2

			if2:
				sll $t1 $t0 2
				addi $t3 $t2 1
				sw $t3 array($t1)
				sll $t1 $t2 2
				li $t3 1
				sw $t3 symbol($t1)
				addi $t4 $t0 1
				move $a0 $t4
				jal FullArray
				
				sll $t1 $t2 2
				li $t3 0
				sw $t3 symbol($t1)
			
			if_end2:
			
			addi $t2 $t2 1
			j for_start2
		for_end2:
	
	pop($t4)
	pop($t3)
	pop($t2)
	pop($t1)
	pop($t0)
	pop($ra)
	
	jr $ra