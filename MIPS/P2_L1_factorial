.macro end
	li $v0 10
	syscall
.end_macro

.macro getInt(%des)
	li $v0 5
	syscall 
	move %des $v0
.end_macro

.macro printInt(%des) 
	move $a0 %des
	li $v0 1
	syscall
.end_macro

.macro saveword(%array, %index, %content)
	sll $t0 %index 2
	sw %content %array($t0)
.end_macro

.data
	ans: .space 800

.text
main:
	getInt($s0) #s0 = factorial
	li $s1 0 #s1 = size
	sll $t0 $0 2
	li $t1 1
	sw $t1 ans($t0) #ans[0] = 1
	
	li $t0 2 #i = 2
	addi $s0 $s0 1 # factorial++
for_i_start:
	slt $t1 $t0 $s0
	beq $t1 $0 for_i_end
		li $t3 0 #in = 0
		li $t2 0 #j = 0
	for_j_start:
		addi $t4 $s1 1 #t4 = size + 1
		slt $t1 $t2 $t4
		beq $t1 $0 for_j_end
		
		sll $t4 $t2 2
		lw $t4 ans($t4)
		mult $t4 $t0
		mflo $t4
		add $t4 $t4 $t3 #t4 = temp
		li $t5 1000000
		div $t4 $t5  #temp % 1000000
		mfhi $t5
		sll $t6 $t2 2
		sw $t5 ans($t6)
		li $t5 1000000
		div $t4 $t5
		mflo $t3
		bne $t2 $s1 if_end
		beq $t3 $0 if_end
		if_start:
			addi $s1 $s1 1
		if_end:
			
		addi $t2 $t2 1
		j for_j_start
	for_j_end:
	
	
	addi $t0 $t0 1
	j for_i_start
for_i_end:
	sll $t0 $s1 2
	lw $t0 ans($t0)
	printInt($t0)

	move $t0 $s1
	subi $t0 $t0 1
for_start:
	slt $t1 $t0 $0
	bne $t1 $0 for_end
	
	sll $t2 $t0 2
	lw $t2 ans($t2)
	li $t9 100000
	slt $t1 $t2 $t9
	beq $t1 $0 output
	printInt($0)
	li $t9 10000
	slt $t1 $t2 $t9
	beq $t1 $0 output
	printInt($0)
	li $t9 1000
	slt $t1 $t2 $t9
	beq $t1 $0 output
	printInt($0)
	li $t9 100
	slt $t1 $t2 $t9
	beq $t1 $0 output
	printInt($0)
	li $t9 10
	slt $t1 $t2 $t9
	beq $t1 $0 output
	printInt($0)
	
output:
	printInt($t2)
	
	subi $t0 $t0 1
	j for_start
for_end:

end